let make = () =>
  Geometry.make([
    (
      "position",
      Geometry.Attribute.make(
        3,
        TypeArray.float32Array([
          0.5,
          0.5,
          0.5,
          0.5,
          0.5,
          -0.5,
          0.5,
          -0.5,
          0.5,
          0.5,
          -0.5,
          -0.5,
          -0.5,
          0.5,
          -0.5,
          -0.5,
          0.5,
          0.5,
          -0.5,
          -0.5,
          -0.5,
          -0.5,
          -0.5,
          0.5,
          -0.5,
          0.5,
          -0.5,
          0.5,
          0.5,
          -0.5,
          -0.5,
          0.5,
          0.5,
          0.5,
          0.5,
          0.5,
          -0.5,
          -0.5,
          0.5,
          0.5,
          -0.5,
          0.5,
          -0.5,
          -0.5,
          -0.5,
          0.5,
          -0.5,
          -0.5,
          0.5,
          0.5,
          -0.5,
          -0.5,
          0.5,
          -0.5,
          0.5,
          -0.5,
          -0.5,
          -0.5,
          -0.5,
          -0.5,
          -0.5,
          0.5,
          0.5,
          0.5,
          0.5,
          0.5,
          -0.5,
          -0.5,
          0.5,
          0.5,
          -0.5,
          0.5,
        ]),
      ),
    ),
    (
      "normal",
      Geometry.Attribute.make(
        3,
        TypeArray.float32Array([
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          -1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
        ]),
      ),
    ),
    (
      "uv",
      Geometry.Attribute.make(
        2,
        TypeArray.float32Array([
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
        ]),
      ),
    ),
    (
      "index",
      Geometry.Attribute.make(
        1,
        TypeArray.uint16Array([
          0,
          2,
          1,
          2,
          3,
          1,
          4,
          6,
          5,
          6,
          7,
          5,
          8,
          10,
          9,
          10,
          11,
          9,
          12,
          14,
          13,
          14,
          15,
          13,
          16,
          18,
          17,
          18,
          19,
          17,
          20,
          22,
          21,
          22,
          23,
          21,
        ]),
      ),
    ),
  ])

// let make = (material, ~size=vec3(1.0, 1.0, 1.0)) => {
//   let mesh = mesh(~geometry=makeGeometry(), ~material)
//   mesh.scale->Vector3.copy(size)->ignore

//   mesh
// }
